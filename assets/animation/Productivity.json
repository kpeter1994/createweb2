{"v":"5.7.11","fr":25,"ip":0,"op":81,"w":350,"h":350,"nm":"Comp 4","assets":[],"layers":[{"ind":1,"ty":4,"nm":"Layer 3","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[175,175.002,0],"ix":2,"l":2},"a":{"a":0,"k":[175,175.002,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Kleaner","np":34,"ix":1,"en":1,"ef":[{"ty":7,"nm":"Anticipation","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"nm":"Smart Interpolation","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Follow Through","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"nm":"Anticipation","ix":4,"v":0},{"ty":0,"nm":"Duration (s)","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"nm":"Amplitude","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"nm":"","ix":7,"v":0},{"ty":6,"nm":"Interpolation","ix":8,"v":0},{"ty":0,"nm":"Slow In","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"nm":"Slow Out","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"nm":"","ix":11,"v":0},{"ty":6,"nm":"Follow Through","ix":12,"v":0},{"ty":0,"nm":"Elasticity","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"nm":"Elasticity random","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Damping","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"nm":"Damping random","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"nm":"Bounce","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","ix":18,"v":0},{"ty":6,"nm":"Spatial Options","ix":19,"v":0},{"ty":7,"nm":"Smart Interpolation","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"nm":"Mode","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"nm":"Overlap (simulation)","ix":22,"v":0},{"ty":7,"nm":"Overlap","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"nm":"Delay (s)","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"nm":"Overlap random","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"nm":"","ix":26,"v":0},{"ty":6,"nm":"Soft Body (simulation)","ix":27,"v":0},{"ty":7,"nm":"Soft Body","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"nm":"Soft-Body Flexibility","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"nm":"","ix":30,"v":0},{"ty":6,"nm":"","ix":31,"v":0},{"ty":0,"nm":"Precision","ix":32,"v":{"a":0,"k":1,"ix":32}}]}],"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-12.664,13.148],[12.664,-13.148]],"c":false},"ix":2},"nm":"Path 1"},{"ty":"st","c":{"a":0,"k":[0.012,0.012,0.012,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.627,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1"},{"ty":"tr","p":{"a":0,"k":[227.242,126.131],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.059,-0.739],[0,0],[0.827,0.561],[0,0],[0.444,-0.473],[0,0],[0,0],[0.532,0.473],[0,0],[0,0],[0.502,-0.237],[9.308,-2.541],[-0.561,4.728],[0,0],[-0.413,-0.325],[0,0],[0,0],[-0.473,0.473],[0,0],[0,0],[0.532,0.473],[0,0],[-1.123,0.118],[0,0]],"o":[[0,0],[-0.059,0.975],[0,0],[-0.561,-0.384],[0,0],[0,0],[-0.502,0.532],[0,0],[0,0],[-0.384,-0.355],[0,0],[-1.861,-4.698],[0,0],[0.473,-0.236],[0,0],[0,0],[0.532,0.414],[0,0],[0,0],[0.502,-0.502],[0,0],[-0.827,-0.739],[0,0],[0.798,-0.089]],"v":[[57.494,-28.24],[55.899,-6.434],[53.801,-5.518],[49.221,-8.739],[47.448,-8.591],[11.222,29.023],[11.104,29.142],[9.213,29.201],[-1.069,19.893],[-17.587,4.942],[-19.093,4.735],[-55.378,16.111],[-57.299,1.78],[-15.843,-14.796],[-14.366,-14.619],[2.18,-1.322],[10.455,5.326],[12.257,5.237],[23.839,-6.138],[37.461,-19.523],[37.402,-21.267],[32.526,-25.522],[33.295,-27.678],[56.076,-29.54]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"st","c":{"a":0,"k":[0.012,0.012,0.012,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.627,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1"},{"ty":"tr","p":{"a":0,"k":[199.83,122.949],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","cix":2,"ix":2},{"ty":"tr","p":{"a":0,"k":[143.986,131.39],"ix":2},"a":{"a":0,"k":[143.986,131.39],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":15,"s":[0,0]},{"t":25,"s":[100,100]}],"ix":3,"x":"var $bm_rt;\nvar fx = effect('Kleaner');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1},{"ty":"tr","p":{"a":0,"k":[172.51,127.996],"ix":2},"a":{"a":0,"k":[172.51,127.996],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","cix":2,"ix":1}],"ip":0,"op":120,"st":0},{"ind":2,"ty":4,"nm":"Layer 2","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[175,175.002,0],"ix":2,"l":2},"a":{"a":0,"k":[175,175.002,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Kleaner","np":34,"ix":1,"en":1,"ef":[{"ty":7,"nm":"Anticipation","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"nm":"Smart Interpolation","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Follow Through","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"nm":"Anticipation","ix":4,"v":0},{"ty":0,"nm":"Duration (s)","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"nm":"Amplitude","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"nm":"","ix":7,"v":0},{"ty":6,"nm":"Interpolation","ix":8,"v":0},{"ty":0,"nm":"Slow In","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"nm":"Slow Out","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"nm":"","ix":11,"v":0},{"ty":6,"nm":"Follow Through","ix":12,"v":0},{"ty":0,"nm":"Elasticity","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"nm":"Elasticity random","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Damping","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"nm":"Damping random","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"nm":"Bounce","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","ix":18,"v":0},{"ty":6,"nm":"Spatial Options","ix":19,"v":0},{"ty":7,"nm":"Smart Interpolation","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"nm":"Mode","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"nm":"Overlap (simulation)","ix":22,"v":0},{"ty":7,"nm":"Overlap","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"nm":"Delay (s)","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"nm":"Overlap random","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"nm":"","ix":26,"v":0},{"ty":6,"nm":"Soft Body (simulation)","ix":27,"v":0},{"ty":7,"nm":"Soft Body","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"nm":"Soft-Body Flexibility","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"nm":"","ix":30,"v":0},{"ty":6,"nm":"","ix":31,"v":0},{"ty":0,"nm":"Precision","ix":32,"v":{"a":0,"k":1,"ix":32}}]}],"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-12.664,13.148],[12.664,-13.148]],"c":false},"ix":2},"nm":"Path 1"},{"ty":"st","c":{"a":0,"k":[0.012,0.012,0.012,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.627,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1"},{"ty":"tr","p":{"a":0,"k":[227.242,126.131],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.059,-0.739],[0,0],[0.827,0.561],[0,0],[0.444,-0.473],[0,0],[0,0],[0.532,0.473],[0,0],[0,0],[0.502,-0.237],[9.308,-2.541],[-0.561,4.728],[0,0],[-0.413,-0.325],[0,0],[0,0],[-0.473,0.473],[0,0],[0,0],[0.532,0.473],[0,0],[-1.123,0.118],[0,0]],"o":[[0,0],[-0.059,0.975],[0,0],[-0.561,-0.384],[0,0],[0,0],[-0.502,0.532],[0,0],[0,0],[-0.384,-0.355],[0,0],[-1.861,-4.698],[0,0],[0.473,-0.236],[0,0],[0,0],[0.532,0.414],[0,0],[0,0],[0.502,-0.502],[0,0],[-0.827,-0.739],[0,0],[0.798,-0.089]],"v":[[57.494,-28.24],[55.899,-6.434],[53.801,-5.518],[49.221,-8.739],[47.448,-8.591],[11.222,29.023],[11.104,29.142],[9.213,29.201],[-1.069,19.893],[-17.587,4.942],[-19.093,4.735],[-55.378,16.111],[-57.299,1.78],[-15.843,-14.796],[-14.366,-14.619],[2.18,-1.322],[10.455,5.326],[12.257,5.237],[23.839,-6.138],[37.461,-19.523],[37.402,-21.267],[32.526,-25.522],[33.295,-27.678],[56.076,-29.54]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"st","c":{"a":0,"k":[0.012,0.012,0.012,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.627,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1"},{"ty":"tr","p":{"a":0,"k":[199.83,122.949],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","cix":2,"ix":2},{"ty":"tr","p":{"a":0,"k":[143.986,131.39],"ix":2},"a":{"a":0,"k":[143.986,131.39],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":15,"s":[0,0]},{"t":25,"s":[100,100]}],"ix":3,"x":"var $bm_rt;\nvar fx = effect('Kleaner');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1},{"ty":"tr","p":{"a":0,"k":[172.51,127.996],"ix":2},"a":{"a":0,"k":[172.51,127.996],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","cix":2,"ix":1},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"}],"ip":0,"op":120,"st":0},{"ind":3,"ty":4,"nm":"Layer 1","tt":2,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[175,175.002,0],"ix":2,"l":2},"a":{"a":0,"k":[175,175.002,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Kleaner","np":34,"ix":1,"en":1,"ef":[{"ty":7,"nm":"Anticipation","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"nm":"Smart Interpolation","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Follow Through","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"nm":"Anticipation","ix":4,"v":0},{"ty":0,"nm":"Duration (s)","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"nm":"Amplitude","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"nm":"","ix":7,"v":0},{"ty":6,"nm":"Interpolation","ix":8,"v":0},{"ty":0,"nm":"Slow In","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"nm":"Slow Out","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"nm":"","ix":11,"v":0},{"ty":6,"nm":"Follow Through","ix":12,"v":0},{"ty":0,"nm":"Elasticity","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"nm":"Elasticity random","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Damping","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"nm":"Damping random","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"nm":"Bounce","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","ix":18,"v":0},{"ty":6,"nm":"Spatial Options","ix":19,"v":0},{"ty":7,"nm":"Smart Interpolation","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"nm":"Mode","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"nm":"Overlap (simulation)","ix":22,"v":0},{"ty":7,"nm":"Overlap","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"nm":"Delay (s)","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"nm":"Overlap random","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"nm":"","ix":26,"v":0},{"ty":6,"nm":"Soft Body (simulation)","ix":27,"v":0},{"ty":7,"nm":"Soft Body","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"nm":"Soft-Body Flexibility","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"nm":"","ix":30,"v":0},{"ty":6,"nm":"","ix":31,"v":0},{"ty":0,"nm":"Precision","ix":32,"v":{"a":0,"k":1,"ix":32}}]}],"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":0,"s":[{"i":[[0.45,-0.01],[0,0],[0.01,0.44],[-0.28,0.97],[-0.43,-0.12],[0.1,-0.42],[-0.18,-9.99]],"o":[[0,0],[-0.45,0],[-0.14,-7.74],[0.13,-0.43],[0.42,0.13],[-0.17,1.16],[0.01,0.45]],"v":[[-2.81,-4.685],[-2.82,-4.685],[-3.64,-5.485],[-3.8,-32.315],[-2.79,-32.875],[-2.23,-31.895],[-2.01,-5.515]],"c":true}]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":15.277,"s":[{"i":[[0.45,-0.003],[0,0],[0.008,0.12],[-0.28,0.263],[-0.43,-0.033],[0.1,-0.114],[-0.18,-2.714]],"o":[[0,0],[-0.45,0],[-0.14,-2.102],[0.13,-0.117],[0.42,0.035],[-0.17,0.315],[0.01,0.122]],"v":[[-2.81,31.958],[-2.82,31.958],[-3.64,31.74],[-3.8,24.453],[-2.79,24.3],[-2.23,24.567],[-2.01,31.732]],"c":true}]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":30.556,"s":[{"i":[[0.45,-0.01],[0,0],[0.01,0.44],[-0.28,0.97],[-0.43,-0.12],[0.1,-0.42],[-0.18,-9.99]],"o":[[0,0],[-0.45,0],[-0.14,-7.74],[0.13,-0.43],[0.42,0.13],[-0.17,1.16],[0.01,0.45]],"v":[[-2.81,-4.685],[-2.82,-4.685],[-3.64,-5.485],[-3.8,-32.315],[-2.79,-32.875],[-2.23,-31.895],[-2.01,-5.515]],"c":true}]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":45.833,"s":[{"i":[[0.45,-0.003],[0,0],[0.008,0.12],[-0.28,0.263],[-0.43,-0.033],[0.1,-0.114],[-0.18,-2.714]],"o":[[0,0],[-0.45,0],[-0.14,-2.102],[0.13,-0.117],[0.42,0.035],[-0.17,0.315],[0.01,0.122]],"v":[[-2.81,31.958],[-2.82,31.958],[-3.64,31.74],[-3.8,24.453],[-2.79,24.3],[-2.23,24.567],[-2.01,31.732]],"c":true}]},{"t":61.111,"s":[{"i":[[0.45,-0.01],[0,0],[0.01,0.44],[-0.28,0.97],[-0.43,-0.12],[0.1,-0.42],[-0.18,-9.99]],"o":[[0,0],[-0.45,0],[-0.14,-7.74],[0.13,-0.43],[0.42,0.13],[-0.17,1.16],[0.01,0.45]],"v":[[-2.81,-4.685],[-2.82,-4.685],[-3.64,-5.485],[-3.8,-32.315],[-2.79,-32.875],[-2.23,-31.895],[-2.01,-5.515]],"c":true}]}],"ix":2},"nm":"Path 1"},{"ind":1,"ty":"sh","ix":2,"ks":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":0,"s":[{"i":[[2.22,0.04],[0,0],[0.59,-0.57],[0.01,-2.59],[0,0],[-1.61,-0.88],[0,0],[-0.1,0.1],[-0.01,2.59],[0,0]],"o":[[0,0],[-0.7,0],[-1.21,1.18],[0,0],[-0.01,3.27],[0,0],[0.1,-0.08],[1.21,-1.18],[0,0],[0.01,-4]],"v":[[7.39,-45.315],[-7.1,-45.595],[-9.06,-44.745],[-11.03,-38.625],[-11.26,38.815],[-8.55,45.595],[8.75,45.595],[9.05,45.335],[11.03,39.215],[11.26,-38.225]],"c":true}]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":15.277,"s":[{"i":[[2.22,0.011],[0,0],[0.59,-0.156],[0.01,-0.704],[0,0],[-1.61,-0.239],[0,0],[-0.1,0.027],[-0.01,0.703],[0,0]],"o":[[0,0],[-0.7,0],[-1.21,0.321],[0,0],[-0.01,0.888],[0,0],[0.1,-0.022],[1.21,-0.321],[0,0],[0.01,-1.087]],"v":[[7.39,20.921],[-7.1,20.845],[-9.06,21.076],[-11.03,22.739],[-11.26,43.774],[-8.55,45.615],[8.75,45.615],[9.05,45.545],[11.03,43.882],[11.26,22.847]],"c":true}]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":30.556,"s":[{"i":[[2.22,0.04],[0,0],[0.59,-0.57],[0.01,-2.59],[0,0],[-1.61,-0.88],[0,0],[-0.1,0.1],[-0.01,2.59],[0,0]],"o":[[0,0],[-0.7,0],[-1.21,1.18],[0,0],[-0.01,3.27],[0,0],[0.1,-0.08],[1.21,-1.18],[0,0],[0.01,-4]],"v":[[7.39,-45.315],[-7.1,-45.595],[-9.06,-44.745],[-11.03,-38.625],[-11.26,38.815],[-8.55,45.595],[8.75,45.595],[9.05,45.335],[11.03,39.215],[11.26,-38.225]],"c":true}]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":45.833,"s":[{"i":[[2.22,0.011],[0,0],[0.59,-0.156],[0.01,-0.704],[0,0],[-1.61,-0.239],[0,0],[-0.1,0.027],[-0.01,0.703],[0,0]],"o":[[0,0],[-0.7,0],[-1.21,0.321],[0,0],[-0.01,0.888],[0,0],[0.1,-0.022],[1.21,-0.321],[0,0],[0.01,-1.087]],"v":[[7.39,20.921],[-7.1,20.845],[-9.06,21.076],[-11.03,22.739],[-11.26,43.774],[-8.55,45.615],[8.75,45.615],[9.05,45.545],[11.03,43.882],[11.26,22.847]],"c":true}]},{"t":61.111,"s":[{"i":[[2.22,0.04],[0,0],[0.59,-0.57],[0.01,-2.59],[0,0],[-1.61,-0.88],[0,0],[-0.1,0.1],[-0.01,2.59],[0,0]],"o":[[0,0],[-0.7,0],[-1.21,1.18],[0,0],[-0.01,3.27],[0,0],[0.1,-0.08],[1.21,-1.18],[0,0],[0.01,-4]],"v":[[7.39,-45.315],[-7.1,-45.595],[-9.06,-44.745],[-11.03,-38.625],[-11.26,38.815],[-8.55,45.595],[8.75,45.595],[9.05,45.335],[11.03,39.215],[11.26,-38.225]],"c":true}]}],"ix":2},"nm":"Path 2"},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[114.24,214.869],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":2.223,"s":[{"i":[[0,0],[-0.01,2.33],[0,0],[-1.39,-0.03],[0,0],[0.02,-3.42],[0,0],[0.7,-1.09]],"o":[[-0.77,-1.07],[0,0],[0.02,-3.42],[0,0],[1.4,0.03],[0,0],[-0.01,2.16],[0,0]],"v":[[-7.355,32.155],[-8.625,26.725],[-8.295,-26.015],[-5.735,-32.155],[6.135,-31.965],[8.625,-25.735],[8.295,27.005],[7.115,32.155]],"c":false}]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":17.5,"s":[{"i":[[0,0],[-0.01,0.633],[0,0],[-1.39,-0.008],[0,0],[0.02,-0.929],[0,0],[0.7,-0.296]],"o":[[-0.77,-0.291],[0,0],[0.02,-0.929],[0,0],[1.4,0.008],[0,0],[-0.01,0.587],[0,0]],"v":[[-7.355,32.175],[-8.625,30.7],[-8.295,16.375],[-5.735,14.707],[6.135,14.758],[8.625,16.451],[8.295,30.776],[7.115,32.175]],"c":false}]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":32.777,"s":[{"i":[[0,0],[-0.01,2.33],[0,0],[-1.39,-0.03],[0,0],[0.02,-3.42],[0,0],[0.7,-1.09]],"o":[[-0.77,-1.07],[0,0],[0.02,-3.42],[0,0],[1.4,0.03],[0,0],[-0.01,2.16],[0,0]],"v":[[-7.355,32.155],[-8.625,26.725],[-8.295,-26.015],[-5.735,-32.155],[6.135,-31.965],[8.625,-25.735],[8.295,27.005],[7.115,32.155]],"c":false}]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":48.056,"s":[{"i":[[0,0],[-0.01,0.633],[0,0],[-1.39,-0.008],[0,0],[0.02,-0.929],[0,0],[0.7,-0.296]],"o":[[-0.77,-0.291],[0,0],[0.02,-0.929],[0,0],[1.4,0.008],[0,0],[-0.01,0.587],[0,0]],"v":[[-7.355,32.175],[-8.625,30.7],[-8.295,16.375],[-5.735,14.707],[6.135,14.758],[8.625,16.451],[8.295,30.776],[7.115,32.175]],"c":false}]},{"t":63.333,"s":[{"i":[[0,0],[-0.01,2.33],[0,0],[-1.39,-0.03],[0,0],[0.02,-3.42],[0,0],[0.7,-1.09]],"o":[[-0.77,-1.07],[0,0],[0.02,-3.42],[0,0],[1.4,0.03],[0,0],[-0.01,2.16],[0,0]],"v":[[-7.355,32.155],[-8.625,26.725],[-8.295,-26.015],[-5.735,-32.155],[6.135,-31.965],[8.625,-25.735],[8.295,27.005],[7.115,32.155]],"c":false}]}],"ix":2},"nm":"Path 1"},{"ty":"st","c":{"a":0,"k":[0.012,0.012,0.012,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.627,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1"},{"ty":"tr","p":{"a":0,"k":[145.045,228.309],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","cix":2,"ix":2},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":4.444,"s":[{"i":[[1.395,0.027],[0,0],[-0.007,2.773],[0,0],[-1.395,-0.027],[0,0],[0.007,-2.773],[0,0]],"o":[[0,0],[-1.395,-0.027],[0,0],[0.007,-2.773],[0,0],[1.395,0.027],[0,0],[-0.007,2.773]],"v":[[5.863,26.544],[-6.003,26.314],[-8.515,21.243],[-8.402,-21.571],[-5.863,-26.544],[6.003,-26.314],[8.515,-21.243],[8.402,21.571]],"c":true}]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":19.723,"s":[{"i":[[1.395,0.007],[0,0],[-0.007,0.753],[0,0],[-1.395,-0.007],[0,0],[0.007,-0.753],[0,0]],"o":[[0,0],[-1.395,-0.007],[0,0],[0.007,-0.753],[0,0],[1.395,0.007],[0,0],[-0.007,0.753]],"v":[[5.863,26.563],[-6.003,26.501],[-8.515,25.124],[-8.402,13.494],[-5.863,12.143],[6.003,12.206],[8.515,13.583],[8.402,25.213]],"c":true}]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":35,"s":[{"i":[[1.395,0.027],[0,0],[-0.007,2.773],[0,0],[-1.395,-0.027],[0,0],[0.007,-2.773],[0,0]],"o":[[0,0],[-1.395,-0.027],[0,0],[0.007,-2.773],[0,0],[1.395,0.027],[0,0],[-0.007,2.773]],"v":[[5.863,26.544],[-6.003,26.314],[-8.515,21.243],[-8.402,-21.571],[-5.863,-26.544],[6.003,-26.314],[8.515,-21.243],[8.402,21.571]],"c":true}]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":50.277,"s":[{"i":[[1.395,0.007],[0,0],[-0.007,0.753],[0,0],[-1.395,-0.007],[0,0],[0.007,-0.753],[0,0]],"o":[[0,0],[-1.395,-0.007],[0,0],[0.007,-0.753],[0,0],[1.395,0.007],[0,0],[-0.007,0.753]],"v":[[5.863,26.563],[-6.003,26.501],[-8.515,25.124],[-8.402,13.494],[-5.863,12.143],[6.003,12.206],[8.515,13.583],[8.402,25.213]],"c":true}]},{"t":65.556,"s":[{"i":[[1.395,0.027],[0,0],[-0.007,2.773],[0,0],[-1.395,-0.027],[0,0],[0.007,-2.773],[0,0]],"o":[[0,0],[-1.395,-0.027],[0,0],[0.007,-2.773],[0,0],[1.395,0.027],[0,0],[-0.007,2.773]],"v":[[5.863,26.544],[-6.003,26.314],[-8.515,21.243],[-8.402,-21.571],[-5.863,-26.544],[6.003,-26.314],[8.515,-21.243],[8.402,21.571]],"c":true}]}],"ix":2},"nm":"Path 1"},{"ty":"st","c":{"a":0,"k":[0.012,0.012,0.012,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.627,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1"},{"ty":"fl","c":{"a":0,"k":[0.012,0.012,0.012,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[172.176,233.921],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","cix":2,"ix":3},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":6.667,"s":[{"i":[[0,0],[0,1.31],[0,0],[-1.8,-0.03],[0,0],[-0.01,-2.93],[0,0],[0.35,-0.85]],"o":[[-0.48,-0.93],[0,0],[-0.01,-2.94],[0,0],[1.81,0.04],[0,0],[0,1.1],[0,0]],"v":[[-10.11,37.43],[-10.88,33.99],[-10.98,-32.18],[-7.73,-37.43],[7.6,-37.1],[10.88,-31.71],[10.98,34.46],[10.43,37.43]],"c":false}]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":21.944,"s":[{"i":[[0,0],[0,0.356],[0,0],[-1.8,-0.008],[0,0],[-0.01,-0.796],[0,0],[0.35,-0.231]],"o":[[-0.48,-0.253],[0,0],[-0.01,-0.799],[0,0],[1.81,0.011],[0,0],[0,0.299],[0,0]],"v":[[-10.11,37.45],[-10.88,36.516],[-10.98,18.542],[-7.73,17.116],[7.6,17.206],[10.88,18.67],[10.98,36.644],[10.43,37.45]],"c":false}]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":37.223,"s":[{"i":[[0,0],[0,1.31],[0,0],[-1.8,-0.03],[0,0],[-0.01,-2.93],[0,0],[0.35,-0.85]],"o":[[-0.48,-0.93],[0,0],[-0.01,-2.94],[0,0],[1.81,0.04],[0,0],[0,1.1],[0,0]],"v":[[-10.11,37.43],[-10.88,33.99],[-10.98,-32.18],[-7.73,-37.43],[7.6,-37.1],[10.88,-31.71],[10.98,34.46],[10.43,37.43]],"c":false}]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":52.5,"s":[{"i":[[0,0],[0,0.356],[0,0],[-1.8,-0.008],[0,0],[-0.01,-0.796],[0,0],[0.35,-0.231]],"o":[[-0.48,-0.253],[0,0],[-0.01,-0.799],[0,0],[1.81,0.011],[0,0],[0,0.299],[0,0]],"v":[[-10.11,37.45],[-10.88,36.516],[-10.98,18.542],[-7.73,17.116],[7.6,17.206],[10.88,18.67],[10.98,36.644],[10.43,37.45]],"c":false}]},{"t":67.777,"s":[{"i":[[0,0],[0,1.31],[0,0],[-1.8,-0.03],[0,0],[-0.01,-2.93],[0,0],[0.35,-0.85]],"o":[[-0.48,-0.93],[0,0],[-0.01,-2.94],[0,0],[1.81,0.04],[0,0],[0,1.1],[0,0]],"v":[[-10.11,37.43],[-10.88,33.99],[-10.98,-32.18],[-7.73,-37.43],[7.6,-37.1],[10.88,-31.71],[10.98,34.46],[10.43,37.43]],"c":false}]}],"ix":2},"nm":"Path 1"},{"ty":"st","c":{"a":0,"k":[0,0,0,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.627,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1"},{"ty":"tr","p":{"a":0,"k":[204.98,223.034],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","cix":2,"ix":4},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":8.889,"s":[{"i":[[0,0],[0.44,0],[0,0],[-0.01,0.45],[0,0],[-0.44,-0.01],[0.01,-0.45]],"o":[[0,0.45],[0,0],[-0.45,-0.01],[0,0],[0,-0.45],[0.45,0.01],[0,0]],"v":[[-4.915,25.425],[-5.725,26.235],[-5.735,26.235],[-6.535,25.405],[-6.375,12.845],[-5.555,12.045],[-4.755,12.875]],"c":true}]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":24.167,"s":[{"i":[[0,0],[0.44,0],[0,0],[-0.01,0.122],[0,0],[-0.44,-0.003],[0.01,-0.122]],"o":[[0,0.122],[0,0],[-0.45,-0.003],[0,0],[0,-0.122],[0.45,0.003],[0,0]],"v":[[-4.915,40.1],[-5.725,40.32],[-5.735,40.32],[-6.535,40.095],[-6.375,36.683],[-5.555,36.466],[-4.755,36.691]],"c":true}]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":39.444,"s":[{"i":[[0,0],[0.44,0],[0,0],[-0.01,0.45],[0,0],[-0.44,-0.01],[0.01,-0.45]],"o":[[0,0.45],[0,0],[-0.45,-0.01],[0,0],[0,-0.45],[0.45,0.01],[0,0]],"v":[[-4.915,25.425],[-5.725,26.235],[-5.735,26.235],[-6.535,25.405],[-6.375,12.845],[-5.555,12.045],[-4.755,12.875]],"c":true}]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":54.723,"s":[{"i":[[0,0],[0.44,0],[0,0],[-0.01,0.122],[0,0],[-0.44,-0.003],[0.01,-0.122]],"o":[[0,0.122],[0,0],[-0.45,-0.003],[0,0],[0,-0.122],[0.45,0.003],[0,0]],"v":[[-4.915,40.1],[-5.725,40.32],[-5.735,40.32],[-6.535,40.095],[-6.375,36.683],[-5.555,36.466],[-4.755,36.691]],"c":true}]},{"t":70,"s":[{"i":[[0,0],[0.44,0],[0,0],[-0.01,0.45],[0,0],[-0.44,-0.01],[0.01,-0.45]],"o":[[0,0.45],[0,0],[-0.45,-0.01],[0,0],[0,-0.45],[0.45,0.01],[0,0]],"v":[[-4.915,25.425],[-5.725,26.235],[-5.735,26.235],[-6.535,25.405],[-6.375,12.845],[-5.555,12.045],[-4.755,12.875]],"c":true}]}],"ix":2},"nm":"Path 1"},{"ind":1,"ty":"sh","ix":2,"ks":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":8.889,"s":[{"i":[[2.31,0.05],[0,0],[0.62,-0.6],[0,-2.62],[0,0],[-0.53,-1.22],[0,0],[-0.01,1.49],[0,0]],"o":[[0,0],[-0.72,0.02],[-1.25,1.23],[0,0],[0,1.73],[0,0],[0.45,-1.17],[0,0],[0.01,-4.1]],"v":[[7.795,-45.245],[-7.545,-45.545],[-9.615,-44.645],[-11.645,-38.405],[-11.835,41.045],[-11.005,45.545],[10.945,45.545],[11.655,41.475],[11.835,-37.975]],"c":true}]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":24.167,"s":[{"i":[[2.31,0.014],[0,0],[0.619,-0.166],[0,-0.712],[0,0],[-0.53,-0.331],[0,0],[-0.01,0.405],[0,0]],"o":[[0,0],[-0.72,0.005],[-1.25,0.334],[0,0],[0,0.47],[0,0],[0.45,-0.318],[0,0],[0.01,-1.114]],"v":[[7.795,20.904],[-7.545,20.823],[-9.615,21.067],[-11.645,22.762],[-11.835,44.343],[-11.005,45.565],[10.945,45.565],[11.655,44.46],[11.835,22.879]],"c":true}]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":39.444,"s":[{"i":[[2.31,0.05],[0,0],[0.62,-0.6],[0,-2.62],[0,0],[-0.53,-1.22],[0,0],[-0.01,1.49],[0,0]],"o":[[0,0],[-0.72,0.02],[-1.25,1.23],[0,0],[0,1.73],[0,0],[0.45,-1.17],[0,0],[0.01,-4.1]],"v":[[7.795,-45.245],[-7.545,-45.545],[-9.615,-44.645],[-11.645,-38.405],[-11.835,41.045],[-11.005,45.545],[10.945,45.545],[11.655,41.475],[11.835,-37.975]],"c":true}]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":54.723,"s":[{"i":[[2.31,0.014],[0,0],[0.619,-0.166],[0,-0.712],[0,0],[-0.53,-0.331],[0,0],[-0.01,0.405],[0,0]],"o":[[0,0],[-0.72,0.005],[-1.25,0.334],[0,0],[0,0.47],[0,0],[0.45,-0.318],[0,0],[0.01,-1.114]],"v":[[7.795,20.904],[-7.545,20.823],[-9.615,21.067],[-11.645,22.762],[-11.835,44.343],[-11.005,45.565],[10.945,45.565],[11.655,44.46],[11.835,22.879]],"c":true}]},{"t":70,"s":[{"i":[[2.31,0.05],[0,0],[0.62,-0.6],[0,-2.62],[0,0],[-0.53,-1.22],[0,0],[-0.01,1.49],[0,0]],"o":[[0,0],[-0.72,0.02],[-1.25,1.23],[0,0],[0,1.73],[0,0],[0.45,-1.17],[0,0],[0.01,-4.1]],"v":[[7.795,-45.245],[-7.545,-45.545],[-9.615,-44.645],[-11.645,-38.405],[-11.835,41.045],[-11.005,45.545],[10.945,45.545],[11.655,41.475],[11.835,-37.975]],"c":true}]}],"ix":2},"nm":"Path 2"},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[234.465,214.919],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","cix":2,"ix":5},{"ty":"tr","p":{"a":0,"k":[234.465,214.919],"ix":2},"a":{"a":0,"k":[234.465,214.919],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.773,0],[0,0],[0,0.773],[0,0],[-0.773,0],[0,0],[0,-0.773],[0,0]],"o":[[0,0],[-0.773,0],[0,0],[0,-0.773],[0,0],[0.773,0],[0,0],[0,0.773]],"v":[[79.465,7.268],[-79.465,7.268],[-80.864,5.868],[-80.864,-5.868],[-79.465,-7.268],[79.465,-7.268],[80.864,-5.868],[80.864,5.868]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"st","c":{"a":0,"k":[0.012,0.012,0.012,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.627,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1"},{"ty":"tr","p":{"a":0,"k":[173.537,267.732],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","cix":2,"ix":2},{"ty":"tr","p":{"a":0,"k":[173.537,267.732],"ix":2},"a":{"a":0,"k":[173.537,267.732],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[38.94,23.875],[36.28,21.125],[41.51,7.885],[46,7.475],[52.83,6.855],[52.59,0.645],[52.18,-11.285],[51.56,-11.285],[40.39,-11.175],[34.6,-24.235],[41.34,-33.095],[28.22,-45.155],[20.15,-36.345],[7.47,-41.815],[6.09,-53.095],[-11.61,-52.475],[-12,-39.595],[-23.7,-34.125],[-33.27,-41.545],[-45.09,-28.665],[-36.88,-19.735],[-41.66,-7.715],[-52.83,-6.295],[-52.36,10.755],[-40.72,10.725],[-34.96,24.465],[-42.11,32.735],[-28.72,45.025],[-20.51,36.345],[-6.27,41.425],[-6.59,52.775],[10.4,53.095],[11.61,40.475],[24.17,35.105],[32.86,41.925],[44.26,29.335]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"st","c":{"a":0,"k":[0,0,0,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.627,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1"},{"ty":"tr","p":{"a":0,"k":[172.11,128.099],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","cix":2,"ix":1},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[3.575,-6.294],[6.471,-2.659],[6.353,15.424],[0.059,0.148],[-0.561,4.728],[-10.578,4.373],[-6.383,-15.394],[-0.384,-1.743]],"o":[[-3.191,5.673],[-15.394,6.382],[-0.059,-0.148],[-1.861,-4.698],[1.122,-10.578],[15.394,-6.382],[0.709,1.714],[1.596,7.387]],"v":[[26.25,14.846],[11.535,27.876],[-27.882,11.536],[-28.059,11.064],[-29.979,-3.267],[-11.542,-27.88],[27.875,-11.54],[29.5,-6.37]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"st","c":{"a":0,"k":[0,0,0,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1.627,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1"},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[172.51,127.996],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","cix":2,"ix":2},{"ty":"tr","p":{"a":0,"k":[172.11,128.099],"ix":2},"a":{"a":0,"k":[172.11,128.099],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":5,"s":[0]},{"t":75,"s":[360]}],"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","cix":2,"ix":1},{"ty":"tr","p":{"a":0,"k":[172.51,127.996],"ix":2},"a":{"a":0,"k":[172.51,127.996],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","cix":2,"ix":2}],"ip":0,"op":120,"st":0}],"markers":[]}